<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="quadruped" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Load Files -->
  <xacro:include filename="$(find quadruped_description)/urdf/leg.xacro" />

  <!-- Gazebo ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/quadruped</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass" value="25" /> <!-- arbitrary value for mass -->
  <xacro:property name="width_body" value="0.4" /> <!-- body width -->
  <xacro:property name="height_body" value="0.05" /> <!-- body height -->
  <xacro:property name="length_body" value="0.65" /> <!-- body length -->
  

  <!-- Used for fixing robot to Gazebo 'base_link' --> 
  <link name="world"/>

  <joint name="worldframe" type="fixed">
    <parent link="world"/>
    <child link="body"/>
    <origin xyz="0 0 2" rpy="0 0 0"/>
  </joint>

 <!--joint name="frame" type="floating">
    <parent link="world"/>
    <child link="com"/>
    <origin xyz="0 0 1" rpy="0 0 0"/>
  </joint-->

  <!-- Base Link -->
  <link name="body">
    <collision>
      <origin xyz="0 0 ${height_body/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width_body} ${length_body} ${height_body}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height_body/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width_body} ${length_body} ${height_body}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height_body/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (length_body*length_body + height_body*height_body)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height_body*height_body + width_body*width_body)}" iyz="0.0"
	  izz="${mass / 12.0 * (width_body*width_body + length_body*length_body)}"/>
    </inertial>
  </link>

  <gazebo reference="body">
    <material>Gazebo/Orange</material>
  </gazebo>


 <!-- Base Link >
  <link name="com">
    <collision>
      <origin xyz="0 0 ${height_body/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width_body} ${length_body} ${height_body}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height_body/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width_body} ${length_body} ${height_body}"/>
      </geometry>
      <material name="blue"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height_body/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (length_body*length_body + height_body*height_body)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height_body*height_body + width_body*width_body)}" iyz="0.0"
	  izz="${mass / 12.0 * (width_body*width_body + length_body*length_body)}"/>
    </inertial>
  </link>

  <gazebo reference="com">
    <material>Gazebo/Blue</material>
  </gazebo-->


<!-- Leg Macros -->
<xacro:leg side="rf" reflectx="-1" reflecty="-1" parent="body"/>
<xacro:leg side="lf" reflectx="1" reflecty="-1" parent="body"/>
<xacro:leg side="rb" reflectx="-1" reflecty="1" parent="body"/>
<xacro:leg side="lb" reflectx="1" reflecty="1" parent="body"/>

		
   

</robot>
